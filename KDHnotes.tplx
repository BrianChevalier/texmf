((*- extends 'article.tplx' -*))

((* block docclass *))
    \documentclass{KDHnotes}
((* endblock docclass *))

((* block packages *))
\usepackage{fancyvrb} % verbatim replacement that allows latex
((* endblock packages *))

((* block definitions *))
    %% Verbatim stuff
    \DefineVerbatimEnvironment{Highlighting}{Verbatim}{commandchars=\\\{\}}
    \providecommand{\tightlist}{%
      \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
((* endblock definitions *))

((* block commands *))
((* endblock commands *))

% Author and Title from metadata
((* block maketitle *))

    ((*- if nb.metadata["latex_metadata"]: -*))

            ((* for item in ['author', 'coursenum', 'subtitle', 'title', 'university', 'coursetitle'] *))
                ((*- if nb.metadata["latex_metadata"][item]: -*))
                    \((( item ))){((( nb.metadata["latex_metadata"][item] )))}

                ((*- else -*))
                     \((( item ))){Define "((( item )))" in nb metadata!}
                ((*- endif *))
        ((* endfor *))

    ((*- endif *))



    \date{\today}
    \maketitle

((* endblock maketitle *))


%===============================================================================
% Input
%===============================================================================

((* block input scoped *))
((* if cell.metadata.hide_input or nb.metadata.hide_input *))

((* else *))

\begin{python}
((( cell.source )))
\end{python}

((* endif *))
((* endblock input *))

%===============================================================================
% Output
%===============================================================================

((* block execute_result scoped *))
    ((*- for type in output.data | filter_data_type -*))
    ((*- endfor -*))
((* endblock execute_result *))


%===============================================================================
% Images
%===============================================================================

((*- block data_pdf -*))
((*- if cell.metadata.caption: -*))
    ((*- if cell.metadata.label: -*))
        ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, cell.metadata.label) )))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, "") )))
    ((*- endif *))
((*- else -*))
    ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], "") )))
((*- endif *))
((*- endblock -*))

% Draw a figure using the graphicx package.
((* macro draw_figure_with_caption(filename, caption, label) -*))
((* set filename = filename | posix_path *))
((*- block figure scoped -*))
  \begin{figure}[h]
    \centering
    \includegraphics[max height=0.4\textheight,max width=0.8\textwidth]{((( filename )))}
    \caption{((( caption )))}
    \label{((( label )))}
  \end{figure}
((*- endblock figure -*))
((*- endmacro *))
